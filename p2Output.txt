primClassif subClassif   tokenStr
  1 Int i;
CONTROL     DECLARE      Int
OPERAND     IDENTIFIER   i
  2 Float pi;
SEPARATOR   EMPTY        ;
CONTROL     DECLARE      Float
OPERAND     IDENTIFIER   pi
  3 String day;
SEPARATOR   EMPTY        ;
CONTROL     DECLARE      String
OPERAND     IDENTIFIER   day
  4    day 
SEPARATOR   EMPTY        ;
  5    = 
OPERAND     IDENTIFIER   day
  6    "Sunday";
OPERATOR    EMPTY        =
OPERAND     STRING       Sunday
                               
  7 String name;
SEPARATOR   EMPTY        ;
CONTROL     DECLARE      String
OPERAND     IDENTIFIER   name
  8 name = "Anita Goodgrade";
SEPARATOR   EMPTY        ;
OPERAND     IDENTIFIER   name
OPERATOR    EMPTY        =
OPERAND     STRING       Anita Goodgrade
                                        
  9 String weird;
SEPARATOR   EMPTY        ;
CONTROL     DECLARE      String
OPERAND     IDENTIFIER   weird
 10 weird = "\tTX\tTexas\n";
SEPARATOR   EMPTY        ;
OPERAND     IDENTIFIER   weird
OPERATOR    EMPTY        =
OPERAND     STRING       . TX. Texas. 
                         09  09     0A
 11 String loc;
SEPARATOR   EMPTY        ;
CONTROL     DECLARE      String
OPERAND     IDENTIFIER   loc
 12 loc = "TX";
SEPARATOR   EMPTY        ;
OPERAND     IDENTIFIER   loc
OPERATOR    EMPTY        =
OPERAND     STRING       TX
                           
 13 
 14 // numeric stuff
 15 print(">>> Checking datatype results based on left operand");
SEPARATOR   EMPTY        ;
FUNCTION    BUILTIN      print
SEPARATOR   EMPTY        (
OPERAND     STRING       >>> Checking datatype results based on left operand
                                                                            
SEPARATOR   EMPTY        )
 16 pi = 3.14;
SEPARATOR   EMPTY        ;
OPERAND     IDENTIFIER   pi
problem: .
OPERATOR    EMPTY        =
OPERAND     FLOAT        3.14
 17 Float area;
SEPARATOR   EMPTY        ;
CONTROL     DECLARE      Float
OPERAND     IDENTIFIER   area
 18 Float radius2;
SEPARATOR   EMPTY        ;
CONTROL     DECLARE      Float
OPERAND     IDENTIFIER   radius2
 19 Int radius;
SEPARATOR   EMPTY        ;
CONTROL     DECLARE      Int
OPERAND     IDENTIFIER   radius
 20 radius = 8;
SEPARATOR   EMPTY        ;
OPERAND     IDENTIFIER   radius
OPERATOR    EMPTY        =
OPERAND     INTEGER      8
 21 radius2 = radius ^ 2;  // square the radius
SEPARATOR   EMPTY        ;
OPERAND     IDENTIFIER   radius2
OPERATOR    EMPTY        =
OPERAND     IDENTIFIER   radius
OPERATOR    EMPTY        ^
OPERAND     INTEGER      2
 22 print("\t1. area all float");
SEPARATOR   EMPTY        ;
FUNCTION    BUILTIN      print
SEPARATOR   EMPTY        (
OPERAND     STRING       . 1. area all float
                         09                 
SEPARATOR   EMPTY        )
 23 area = pi * radius2;
SEPARATOR   EMPTY        ;
OPERAND     IDENTIFIER   area
OPERATOR    EMPTY        =
OPERAND     IDENTIFIER   pi
OPERATOR    EMPTY        *
OPERAND     IDENTIFIER   radius2
 24 print("\tradius="
SEPARATOR   EMPTY        ;
FUNCTION    BUILTIN      print
SEPARATOR   EMPTY        (
 25       ,  radius
OPERAND     STRING       . radius=
                         09       
SEPARATOR   EMPTY        ,
 26       ,  "radius2="
OPERAND     IDENTIFIER   radius
SEPARATOR   EMPTY        ,
 27       ,  radius2
OPERAND     STRING       radius2=
                                 
SEPARATOR   EMPTY        ,
 28       ,  "area="
OPERAND     IDENTIFIER   radius2
SEPARATOR   EMPTY        ,
 29       ,  area);
OPERAND     STRING       area=
                              
SEPARATOR   EMPTY        ,
OPERAND     IDENTIFIER   area
SEPARATOR   EMPTY        )
 30 Int irad2;
SEPARATOR   EMPTY        ;
CONTROL     DECLARE      Int
OPERAND     IDENTIFIER   irad2
 31 irad2 = radius ^ 2;
SEPARATOR   EMPTY        ;
OPERAND     IDENTIFIER   irad2
OPERATOR    EMPTY        =
OPERAND     IDENTIFIER   radius
OPERATOR    EMPTY        ^
OPERAND     INTEGER      2
 32 print("\t2. area using int radius as left operand");
SEPARATOR   EMPTY        ;
FUNCTION    BUILTIN      print
SEPARATOR   EMPTY        (
OPERAND     STRING       . 2. area using int radius as left operand
                         09                                        
SEPARATOR   EMPTY        )
 33 area = irad2 * pi;
SEPARATOR   EMPTY        ;
OPERAND     IDENTIFIER   area
OPERATOR    EMPTY        =
OPERAND     IDENTIFIER   irad2
OPERATOR    EMPTY        *
OPERAND     IDENTIFIER   pi
 34 print("\tradius=", radius, "irad2=", irad2, "area=", area);
SEPARATOR   EMPTY        ;
FUNCTION    BUILTIN      print
SEPARATOR   EMPTY        (
OPERAND     STRING       . radius=
                         09       
SEPARATOR   EMPTY        ,
OPERAND     IDENTIFIER   radius
SEPARATOR   EMPTY        ,
OPERAND     STRING       irad2=
                               
SEPARATOR   EMPTY        ,
OPERAND     IDENTIFIER   irad2
SEPARATOR   EMPTY        ,
OPERAND     STRING       area=
                              
SEPARATOR   EMPTY        ,
OPERAND     IDENTIFIER   area
SEPARATOR   EMPTY        )
 35 Float circum;
SEPARATOR   EMPTY        ;
CONTROL     DECLARE      Float
OPERAND     IDENTIFIER   circum
 36 Float twoPi;
SEPARATOR   EMPTY        ;
CONTROL     DECLARE      Float
OPERAND     IDENTIFIER   twoPi
 37 print("\t3. circumference using twoPi as float * int");
SEPARATOR   EMPTY        ;
FUNCTION    BUILTIN      print
SEPARATOR   EMPTY        (
OPERAND     STRING       . 3. circumference using twoPi as float * int
                         09                                           
SEPARATOR   EMPTY        )
 38 twoPi = pi * 2;
SEPARATOR   EMPTY        ;
OPERAND     IDENTIFIER   twoPi
OPERATOR    EMPTY        =
OPERAND     IDENTIFIER   pi
OPERATOR    EMPTY        *
OPERAND     INTEGER      2
 39 circum = twoPi * radius;
SEPARATOR   EMPTY        ;
OPERAND     IDENTIFIER   circum
OPERATOR    EMPTY        =
OPERAND     IDENTIFIER   twoPi
OPERATOR    EMPTY        *
OPERAND     IDENTIFIER   radius
 40 print("\tradius=", radius, "twoPi=", twoPi, "circum=", circum);
SEPARATOR   EMPTY        ;
FUNCTION    BUILTIN      print
SEPARATOR   EMPTY        (
OPERAND     STRING       . radius=
                         09       
SEPARATOR   EMPTY        ,
OPERAND     IDENTIFIER   radius
SEPARATOR   EMPTY        ,
OPERAND     STRING       twoPi=
                               
SEPARATOR   EMPTY        ,
OPERAND     IDENTIFIER   twoPi
SEPARATOR   EMPTY        ,
OPERAND     STRING       circum=
                                
SEPARATOR   EMPTY        ,
OPERAND     IDENTIFIER   circum
SEPARATOR   EMPTY        )
 41 print("\t4. circumference using twoPi as int * float");
SEPARATOR   EMPTY        ;
FUNCTION    BUILTIN      print
SEPARATOR   EMPTY        (
OPERAND     STRING       . 4. circumference using twoPi as int * float
                         09                                           
SEPARATOR   EMPTY        )
 42 twoPi = 2 * pi;
SEPARATOR   EMPTY        ;
OPERAND     IDENTIFIER   twoPi
OPERATOR    EMPTY        =
OPERAND     INTEGER      2
OPERATOR    EMPTY        *
OPERAND     IDENTIFIER   pi
 43 circum = twoPi * radius;
SEPARATOR   EMPTY        ;
OPERAND     IDENTIFIER   circum
OPERATOR    EMPTY        =
OPERAND     IDENTIFIER   twoPi
OPERATOR    EMPTY        *
OPERAND     IDENTIFIER   radius
 44 print("\tradius=", radius, "twoPi=", twoPi, "circum=", circum);
SEPARATOR   EMPTY        ;
FUNCTION    BUILTIN      print
SEPARATOR   EMPTY        (
OPERAND     STRING       . radius=
                         09       
SEPARATOR   EMPTY        ,
OPERAND     IDENTIFIER   radius
SEPARATOR   EMPTY        ,
OPERAND     STRING       twoPi=
                               
SEPARATOR   EMPTY        ,
OPERAND     IDENTIFIER   twoPi
SEPARATOR   EMPTY        ,
OPERAND     STRING       circum=
                                
SEPARATOR   EMPTY        ,
OPERAND     IDENTIFIER   circum
SEPARATOR   EMPTY        )
 45 
 46 // Simple if
 47 i = 0;
SEPARATOR   EMPTY        ;
OPERAND     IDENTIFIER   i
OPERATOR    EMPTY        =
OPERAND     INTEGER      0
 48 print(">>> First If");
SEPARATOR   EMPTY        ;
FUNCTION    BUILTIN      print
SEPARATOR   EMPTY        (
OPERAND     STRING       >>> First If
                                     
SEPARATOR   EMPTY        )
 49 if loc == "TX": // check for TX
SEPARATOR   EMPTY        ;
CONTROL     FLOW         if
OPERAND     IDENTIFIER   loc
OPERATOR    EMPTY        ==
OPERAND     STRING       TX
                           
 50     // It is TX
 51     print("\tloc is", loc);
SEPARATOR   EMPTY        :
FUNCTION    BUILTIN      print
SEPARATOR   EMPTY        (
OPERAND     STRING       . loc is
                         09      
SEPARATOR   EMPTY        ,
OPERAND     IDENTIFIER   loc
SEPARATOR   EMPTY        )
 52     // it is ok to have this statement on multiple lines.  
 53     // That is why we have a semicolon
 54     i 
SEPARATOR   EMPTY        ;
 55        = 
OPERAND     IDENTIFIER   i
 56           i 
OPERATOR    EMPTY        =
 57           + 1;
OPERAND     IDENTIFIER   i
OPERATOR    EMPTY        +
OPERAND     INTEGER      1
 58 endif;
SEPARATOR   EMPTY        ;
CONTROL     END          endif
 59 print("\tDone with first if");
SEPARATOR   EMPTY        ;
FUNCTION    BUILTIN      print
SEPARATOR   EMPTY        (
OPERAND     STRING       . Done with first if
                         09                  
SEPARATOR   EMPTY        )
 60 
 61 print(">>> Second If");
SEPARATOR   EMPTY        ;
FUNCTION    BUILTIN      print
SEPARATOR   EMPTY        (
OPERAND     STRING       >>> Second If
                                      
SEPARATOR   EMPTY        )
 62 // if then else
 63 if i >= 5:
SEPARATOR   EMPTY        ;
CONTROL     FLOW         if
OPERAND     IDENTIFIER   i
OPERATOR    EMPTY        >=
OPERAND     INTEGER      5
 64     print("\t2nd if true, i >= 5, i =", i);
SEPARATOR   EMPTY        :
FUNCTION    BUILTIN      print
SEPARATOR   EMPTY        (
OPERAND     STRING       . 2nd if true, i >= 5, i =
                         09                        
SEPARATOR   EMPTY        ,
OPERAND     IDENTIFIER   i
SEPARATOR   EMPTY        )
 65 else:
SEPARATOR   EMPTY        ;
CONTROL     END          else
 66     print("\t2nd if false, i >= 5, i =", i);
SEPARATOR   EMPTY        :
FUNCTION    BUILTIN      print
SEPARATOR   EMPTY        (
OPERAND     STRING       . 2nd if false, i >= 5, i =
                         09                         
SEPARATOR   EMPTY        ,
OPERAND     IDENTIFIER   i
SEPARATOR   EMPTY        )
 67 endif;
SEPARATOR   EMPTY        ;
CONTROL     END          endif
 68 // while and if 
 69 print(">>> First while i < 5");    
SEPARATOR   EMPTY        ;
FUNCTION    BUILTIN      print
SEPARATOR   EMPTY        (
OPERAND     STRING       >>> First while i < 5
                                              
SEPARATOR   EMPTY        )
 70 i = 1;
SEPARATOR   EMPTY        ;
OPERAND     IDENTIFIER   i
OPERATOR    EMPTY        =
OPERAND     INTEGER      1
 71 while i < 5:
SEPARATOR   EMPTY        ;
CONTROL     FLOW         while
OPERAND     IDENTIFIER   i
OPERATOR    EMPTY        <
OPERAND     INTEGER      5
 72     print("\ttop of while, i=", i);
SEPARATOR   EMPTY        :
FUNCTION    BUILTIN      print
SEPARATOR   EMPTY        (
OPERAND     STRING       . top of while, i=
                         09                
SEPARATOR   EMPTY        ,
OPERAND     IDENTIFIER   i
SEPARATOR   EMPTY        )
 73     if i < 3:
SEPARATOR   EMPTY        ;
CONTROL     FLOW         if
OPERAND     IDENTIFIER   i
OPERATOR    EMPTY        <
OPERAND     INTEGER      3
 74         print("\twhile first if true i<3, i=", i);
SEPARATOR   EMPTY        :
FUNCTION    BUILTIN      print
SEPARATOR   EMPTY        (
OPERAND     STRING       . while first if true i<3, i=
                         09                           
SEPARATOR   EMPTY        ,
OPERAND     IDENTIFIER   i
SEPARATOR   EMPTY        )
 75         i = i + 2;
SEPARATOR   EMPTY        ;
OPERAND     IDENTIFIER   i
OPERATOR    EMPTY        =
OPERAND     IDENTIFIER   i
OPERATOR    EMPTY        +
OPERAND     INTEGER      2
 76         if loc != "TX":
SEPARATOR   EMPTY        ;
CONTROL     FLOW         if
OPERAND     IDENTIFIER   loc
OPERATOR    EMPTY        !=
OPERAND     STRING       TX
                           
 77              print("\t\twhile inner if true ... wrong!");
SEPARATOR   EMPTY        :
FUNCTION    BUILTIN      print
SEPARATOR   EMPTY        (
OPERAND     STRING       . . while inner if true ... wrong!
                         0909                              
SEPARATOR   EMPTY        )
 78         else:
SEPARATOR   EMPTY        ;
CONTROL     END          else
 79              print('\t\twhile inner if false, loc!=\'TX\', loc is', loc);
SEPARATOR   EMPTY        :
FUNCTION    BUILTIN      print
SEPARATOR   EMPTY        (
OPERAND     STRING       . . while inner if false, loc!='TX', loc is
                         0909                                       
SEPARATOR   EMPTY        ,
OPERAND     IDENTIFIER   loc
SEPARATOR   EMPTY        )
 80         endif;
SEPARATOR   EMPTY        ;
CONTROL     END          endif
 81     else:
SEPARATOR   EMPTY        ;
CONTROL     END          else
 82         print("\twhile first if false i<3, i=", i);
SEPARATOR   EMPTY        :
FUNCTION    BUILTIN      print
SEPARATOR   EMPTY        (
OPERAND     STRING       . while first if false i<3, i=
                         09                            
SEPARATOR   EMPTY        ,
OPERAND     IDENTIFIER   i
SEPARATOR   EMPTY        )
 83         if loc=="TX":
SEPARATOR   EMPTY        ;
CONTROL     FLOW         if
OPERAND     IDENTIFIER   loc
OPERATOR    EMPTY        ==
OPERAND     STRING       TX
                           
 84              print("\t\twhile 2nd inner if true loc=='TX', loc is", loc);
SEPARATOR   EMPTY        :
FUNCTION    BUILTIN      print
SEPARATOR   EMPTY        (
OPERAND     STRING       . . while 2nd inner if true loc=='TX', loc is
                         0909                                         
SEPARATOR   EMPTY        ,
OPERAND     IDENTIFIER   loc
SEPARATOR   EMPTY        )
 85              i = i + 1;
SEPARATOR   EMPTY        ;
OPERAND     IDENTIFIER   i
OPERATOR    EMPTY        =
OPERAND     IDENTIFIER   i
OPERATOR    EMPTY        +
OPERAND     INTEGER      1
 86         else:
SEPARATOR   EMPTY        ;
CONTROL     END          else
 87              print("\t\twhile 2nd inner if false ... wrong");
SEPARATOR   EMPTY        :
FUNCTION    BUILTIN      print
SEPARATOR   EMPTY        (
OPERAND     STRING       . . while 2nd inner if false ... wrong
                         0909                                  
SEPARATOR   EMPTY        )
 88              i = i + 10;
SEPARATOR   EMPTY        ;
OPERAND     IDENTIFIER   i
OPERATOR    EMPTY        =
OPERAND     IDENTIFIER   i
OPERATOR    EMPTY        +
OPERAND     INTEGER      10
 89         endif;
SEPARATOR   EMPTY        ;
CONTROL     END          endif
 90         print("\twhile first if false after inner if");
SEPARATOR   EMPTY        ;
FUNCTION    BUILTIN      print
SEPARATOR   EMPTY        (
OPERAND     STRING       . while first if false after inner if
                         09                                   
SEPARATOR   EMPTY        )
 91     endif;
SEPARATOR   EMPTY        ;
CONTROL     END          endif
 92     print("\tbottom of while, i=", i);
SEPARATOR   EMPTY        ;
FUNCTION    BUILTIN      print
SEPARATOR   EMPTY        (
OPERAND     STRING       . bottom of while, i=
                         09                   
SEPARATOR   EMPTY        ,
OPERAND     IDENTIFIER   i
SEPARATOR   EMPTY        )
 93 endwhile;
SEPARATOR   EMPTY        ;
CONTROL     END          endwhile
 94 print("\tAfter first while");
SEPARATOR   EMPTY        ;
FUNCTION    BUILTIN      print
SEPARATOR   EMPTY        (
OPERAND     STRING       . After first while
                         09                 
SEPARATOR   EMPTY        )
 95 
 96 // nested while loops
 97 print(">>> Second while i < 5 ... with nested while");
SEPARATOR   EMPTY        ;
FUNCTION    BUILTIN      print
SEPARATOR   EMPTY        (
OPERAND     STRING       >>> Second while i < 5 ... with nested while
                                                                     
SEPARATOR   EMPTY        )
 98 i = 1;
SEPARATOR   EMPTY        ;
OPERAND     IDENTIFIER   i
OPERATOR    EMPTY        =
OPERAND     INTEGER      1
 99 Int j;
SEPARATOR   EMPTY        ;
CONTROL     DECLARE      Int
OPERAND     IDENTIFIER   j
100 Bool bFlag;
SEPARATOR   EMPTY        ;
CONTROL     DECLARE      Bool
OPERAND     IDENTIFIER   bFlag
101 bFlag = T;
SEPARATOR   EMPTY        ;
OPERAND     IDENTIFIER   bFlag
OPERATOR    EMPTY        =
OPERAND     BOOLEAN      T
102 while i < 5:
SEPARATOR   EMPTY        ;
CONTROL     FLOW         while
OPERAND     IDENTIFIER   i
OPERATOR    EMPTY        <
OPERAND     INTEGER      5
103     j = i;
SEPARATOR   EMPTY        :
OPERAND     IDENTIFIER   j
OPERATOR    EMPTY        =
OPERAND     IDENTIFIER   i
104     print("\ttop of while, i=", i, "j=", j);
SEPARATOR   EMPTY        ;
FUNCTION    BUILTIN      print
SEPARATOR   EMPTY        (
OPERAND     STRING       . top of while, i=
                         09                
SEPARATOR   EMPTY        ,
OPERAND     IDENTIFIER   i
SEPARATOR   EMPTY        ,
OPERAND     STRING       j=
                           
SEPARATOR   EMPTY        ,
OPERAND     IDENTIFIER   j
SEPARATOR   EMPTY        )
105     print("\t>>> Inner while j <= 3");
SEPARATOR   EMPTY        ;
FUNCTION    BUILTIN      print
SEPARATOR   EMPTY        (
OPERAND     STRING       . >>> Inner while j <= 3
                         09                      
SEPARATOR   EMPTY        )
106     while  j <= 3:
SEPARATOR   EMPTY        ;
CONTROL     FLOW         while
OPERAND     IDENTIFIER   j
OPERATOR    EMPTY        <=
OPERAND     INTEGER      3
107         print("\t\tinner while, j=", j);
SEPARATOR   EMPTY        :
FUNCTION    BUILTIN      print
SEPARATOR   EMPTY        (
OPERAND     STRING       . . inner while, j=
                         0909               
SEPARATOR   EMPTY        ,
OPERAND     IDENTIFIER   j
SEPARATOR   EMPTY        )
108         j = j + 1;
SEPARATOR   EMPTY        ;
OPERAND     IDENTIFIER   j
OPERATOR    EMPTY        =
OPERAND     IDENTIFIER   j
OPERATOR    EMPTY        +
OPERAND     INTEGER      1
109     endwhile;
SEPARATOR   EMPTY        ;
CONTROL     END          endwhile
110     bFlag = F;
SEPARATOR   EMPTY        ;
OPERAND     IDENTIFIER   bFlag
OPERATOR    EMPTY        =
OPERAND     BOOLEAN      F
111     print("\tbottom of while, i=", i, "j=", j);
SEPARATOR   EMPTY        ;
FUNCTION    BUILTIN      print
SEPARATOR   EMPTY        (
OPERAND     STRING       . bottom of while, i=
                         09                   
SEPARATOR   EMPTY        ,
OPERAND     IDENTIFIER   i
SEPARATOR   EMPTY        ,
OPERAND     STRING       j=
                           
SEPARATOR   EMPTY        ,
OPERAND     IDENTIFIER   j
SEPARATOR   EMPTY        )
112     i = i + 1;
SEPARATOR   EMPTY        ;
OPERAND     IDENTIFIER   i
OPERATOR    EMPTY        =
OPERAND     IDENTIFIER   i
OPERATOR    EMPTY        +
OPERAND     INTEGER      1
113 endwhile;
SEPARATOR   EMPTY        ;
CONTROL     END          endwhile
114 print("\tAfter outer while");
SEPARATOR   EMPTY        ;
FUNCTION    BUILTIN      print
SEPARATOR   EMPTY        (
OPERAND     STRING       . After outer while
                         09                 
SEPARATOR   EMPTY        )
115         
EOF         EMPTY        
